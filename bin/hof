#!/usr/bin/env node

const program = require('commander');

const pkg = require('../package.json');
const cli = require('../');

program.version(pkg.version)
  .command('init [dir]')
  .description('initialise a hof project at <dir>')
  .option('-a, --app <app>', 'name of initial app to create', /^[a-z\-]+$/)
  .option('-f, --force', 'force overwrite existing app')
  .action((dir, settings) => {
    cli.init(dir, settings)
      .catch((e) => {
        console.error(e.message);
      });
  });

program.version(pkg.version)
  .command('app <name>')
  .description('add a new app to an existing hof project')
  .action((name, settings) => {
    cli.app(name, settings)
      .catch((e) => {
        console.error(e.message);
      });
  });

program.version(pkg.version)
  .command('behaviour <dir>')
  .description('initialise a new hof behaviour at <dir>')
  .option('-n, --name <name>', 'name of initial behaviour to create', /^[a-z\-]+$/)
  .option('-f, --force', 'force overwrite existing behaviour')
  .action((dir, settings) => {
    cli.behaviour(dir, settings)
      .catch((e) => {
        console.error(e.message);
      });
  });

if (!process.argv.slice(2).length) {
  program.outputHelp();
}

program.parse(process.argv);
